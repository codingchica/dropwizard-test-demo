<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>codingchica</groupId>
  <artifactId>dropwizard-test-demo</artifactId>
  <version>0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>dropwizard-test-demo</name>

  <properties>
    <apache.commmons.lang.version>3.12.0</apache.commmons.lang.version>
    <cucumber.version>7.11.1</cucumber.version>
    <dropwizard.version>2.1.4</dropwizard.version>
    <jacoco.maven.plugin.version>0.8.8</jacoco.maven.plugin.version>
    <java.version>17</java.version>
    <junit.jupiter.version>5.9.1</junit.jupiter.version>
    <junit.platform.version>1.9.1</junit.platform.version>
    <maven.checkstyle.plugin.version>3.2.1</maven.checkstyle.plugin.version>
    <maven.compiler.plugin.version>3.10.1</maven.compiler.plugin.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <maven.enforcer.plugin.version>3.2.1</maven.enforcer.plugin.version>
    <maven.jar.plugin.version>3.3.0</maven.jar.plugin.version>
    <maven.javadoc.plugin.version>3.4.1</maven.javadoc.plugin.version>
    <maven.project.info.reports.plugin.version>3.4.1</maven.project.info.reports.plugin.version>
    <maven.shade.plugin.version>3.4.0</maven.shade.plugin.version>
    <maven.source.plugin.version>3.2.1</maven.source.plugin.version>
    <maven.surefire.plugin.version>3.0.0</maven.surefire.plugin.version>
    <mainClass>codingchica.demo.test.dropwizard.DropwizardTestDemoApplication</mainClass>
    <mockito.version>4.6.1</mockito.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <properties.maven.plugin>1.1.0</properties.maven.plugin>
    <spotless.maven.plugin.version>2.35.0</spotless.maven.plugin.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <!-- https://github.com/dropwizard/dropwizard/blob/release/2.1.x/dropwizard-dependencies/pom.xml -->
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-dependencies</artifactId>
        <version>${dropwizard.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- Runtime dependencies -->
    <dependency>
      <!-- https://github.com/dropwizard/dropwizard/tree/release/2.1.x/dropwizard-core -->
      <groupId>io.dropwizard</groupId>
      <artifactId>dropwizard-core</artifactId>
    </dependency>
    <dependency>
      <!-- https://github.com/FasterXML/jackson-annotations -->
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>
    <dependency>
      <!-- https://github.com/jakartaee/validation -->
      <groupId>jakarta.validation</groupId>
      <artifactId>jakarta.validation-api</artifactId>
    </dependency>
    <dependency>
      <!-- https://github.com/hibernate/hibernate-validator -->
      <groupId>org.hibernate.validator</groupId>
      <artifactId>hibernate-validator</artifactId>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <!-- https://github.com/junit-team/junit5/tree/main/junit-jupiter-engine -->
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- https://github.com/junit-team/junit5/tree/main/junit-jupiter-api -->
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- https://github.com/junit-team/junit5/tree/main/junit-jupiter-params -->
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- https://github.com/junit-team/junit5/tree/main/junit-platform-suite -->
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-suite</artifactId>
      <version>${junit.platform.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- https://github.com/mockito/mockito -->
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- https://github.com/mockito/mockito -->
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- https://github.com/apache/commons-lang -->
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${apache.commmons.lang.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- https://github.com/cucumber/cucumber-jvm/tree/main/cucumber-junit -->
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-junit</artifactId>
      <version>${cucumber.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- https://github.com/cucumber/cucumber-jvm/tree/main/cucumber-core -->
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-core</artifactId>
      <version>${cucumber.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- https://github.com/cucumber/cucumber-jvm/tree/main/cucumber-java -->
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-java</artifactId>
      <version>${cucumber.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- https://github.com/cucumber/cucumber-jvm/tree/main/cucumber-junit-platform-engine -->
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-junit-platform-engine</artifactId>
      <version>${cucumber.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <!-- https://maven.apache.org/plugins/maven-shade-plugin/ -->
        <artifactId>maven-shade-plugin</artifactId>
        <version>${maven.shade.plugin.version}</version>
        <configuration>
          <createDependencyReducedPom>true</createDependencyReducedPom>
          <transformers>
            <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
            <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
              <mainClass>${mainClass}</mainClass>
            </transformer>
          </transformers>
          <!-- exclude signed Manifests -->
          <filters>
            <filter>
              <artifact>*:*</artifact>
              <excludes>
                <exclude>META-INF/*.SF</exclude>
                <exclude>META-INF/*.DSA</exclude>
                <exclude>META-INF/*.RSA</exclude>
              </excludes>
            </filter>
          </filters>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>shade</goal>
            </goals>
            <phase>package</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- https://github.com/diffplug/spotless/tree/main/plugin-maven -->
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${spotless.maven.plugin.version}</version>
        <configuration>
          <formats>
            <!-- you can define as many formats as you want, each is independent -->
            <format>
              <!-- define the files to apply to -->
              <includes>
                <include>*.md</include>
                <include>.gitignore</include>
                <include>.properties</include>
              </includes>
              <!-- define the steps to apply to those files -->
              <trimTrailingWhitespace/>
              <endWithNewline/>
              <indent>
                <tabs>true</tabs>
                <spacesPerTab>2</spacesPerTab>
              </indent>
            </format>
          </formats>
          <!-- define a language-specific format -->
          <java>
            <googleJavaFormat>
              <!-- optional -->
              <version>1.15.0</version>
              <!-- GOOGLE or AOSP (optional) -->
              <!-- https://github.com/google/google-java-format -->
              <style>GOOGLE</style>
              <!-- optional (requires at least 1.8) -->
              <reflowLongStrings>true</reflowLongStrings>
              <!-- optional: custom group artifact (you probably don't need this) -->
              <groupArtifact>com.google.googlejavaformat:google-java-format</groupArtifact>
            </googleJavaFormat>
            <!-- standard import order -->
            <importOrder/>
            <!-- self-explanatory -->
            <removeUnusedImports/>
            <!-- fixes formatting of type annotations, see below -->
            <formatAnnotations/>

          </java>
          <pom>
            <!-- These are the defaults, you can override if you want -->
            <includes>
              <include>pom.xml</include>
            </includes>

            <sortPom>
              <!-- The encoding of the pom files -->
              <encoding>UTF-8</encoding>
              <!-- line separator to use -->
              <lineSeparator>${line.separator}</lineSeparator>
              <!-- Should empty elements be expanded-->
              <expandEmptyElements>false</expandEmptyElements>
              <!-- Should a space be added inside self-closing elements-->
              <spaceBeforeCloseEmptyElement>false</spaceBeforeCloseEmptyElement>
              <!-- Keep empty lines -->
              <keepBlankLines>true</keepBlankLines>
              <!-- Indentation -->
              <nrOfIndentSpace>2</nrOfIndentSpace>
              <!-- Should empty lines be indented -->
              <indentBlankLines>false</indentBlankLines>
              <!-- Should schema locations be indended -->
              <indentSchemaLocation>false</indentSchemaLocation>
              <!-- Sort order of elements: https://github.com/Ekryd/sortpom/wiki/PredefinedSortOrderProfiles-->
              <predefinedSortOrder>recommended_2008_06</predefinedSortOrder>
              <!-- Custom sort order of elements: https://raw.githubusercontent.com/Ekryd/sortpom/master/sorter/src/main/resources/custom_1.xml -->
              <sortOrderFile/>
              <!-- Sort dependencies: https://github.com/Ekryd/sortpom/wiki/SortDependencies-->
              <sortDependencies/>
              <!-- Sort dependency exclusions: https://github.com/Ekryd/sortpom/wiki/SortDependencies-->
              <sortDependencyExclusions/>
              <!-- Sort plugins: https://github.com/Ekryd/sortpom/wiki/SortPlugins -->
              <sortPlugins/>
              <!-- Sort properties -->
              <sortProperties>false</sortProperties>
              <!-- Sort modules -->
              <sortModules>false</sortModules>
              <!-- Sort plugin executions -->
              <sortExecutions>false</sortExecutions>
            </sortPom>
          </pom>
          <json>
            <includes>
              <!-- You have to set the target manually -->
              <include>src/**/*.json</include>
            </includes>
            <jackson>
              <!-- optional: The version of 'com.fasterxml.jackson.core:jackson-databind' to be used -->
              <version>2.14.1</version>
              <features>
                <!-- optional: Customize the set of features (based on com.fasterxml.jackson.databind.SerializationFeature) -->
                <!-- https://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/SerializationFeature.html -->
                <!-- optional: true by default -->
                <INDENT_OUTPUT>true</INDENT_OUTPUT>
                <!-- optional: false by default -->
                <ORDER_MAP_ENTRIES_BY_KEYS>true</ORDER_MAP_ENTRIES_BY_KEYS>
              </features>
              <jsonFeatures>
                <!-- false by default -->
                <QUOTE_FIELD_NAMES>false</QUOTE_FIELD_NAMES>
              </jsonFeatures>
              <!-- optional: false by default -->
              <spaceBeforeSeparator>false</spaceBeforeSeparator>
            </jackson>
          </json>
          <yaml>
            <includes>
              <!-- You have to set the target manually -->
              <include>**/*.yaml</include>
              <include>**/*.yml</include>
            </includes>
            <jackson>
              <!-- optional: The version of 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml' to be used -->
              <version>2.14.1</version>
              <features>
                <!-- optional: Customize the set of features (based on com.fasterxml.jackson.databind.SerializationFeature) -->
                <!-- https://fasterxml.github.io/jackson-databind/javadoc/2.6/com/fasterxml/jackson/databind/SerializationFeature.html -->
                <!-- true by default -->
                <INDENT_OUTPUT>true</INDENT_OUTPUT>
                <!-- false by default -->
                <ORDER_MAP_ENTRIES_BY_KEYS>true</ORDER_MAP_ENTRIES_BY_KEYS>
              </features>
              <yamlFeatures>
                <!-- false by default -->
                <WRITE_DOC_START_MARKER>false</WRITE_DOC_START_MARKER>
                <!-- false by default -->
                <MINIMIZE_QUOTES>false</MINIMIZE_QUOTES>
              </yamlFeatures>
            </jackson>
          </yaml>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>apply</goal>
            </goals>
            <phase>process-sources</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- https://maven.apache.org/plugins/maven-jar-plugin/ -->
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven.jar.plugin.version}</version>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <mainClass>${mainClass}</mainClass>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <!-- https://maven.apache.org/plugins/maven-compiler-plugin/ -->
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>${properties.maven.plugin}</version>
        <configuration>
          <files>
            <!-- This file is used by the IDE when running the CLI, so Maven should be kept in sync. -->
            <file>src/test/resources/cucumber.properties</file>
          </files>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <phase>initialize</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- https://maven.apache.org/surefire/maven-surefire-plugin/ -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <runOrder>random</runOrder>
        </configuration>
        <executions>
          <execution>
            <id>unit-tests</id>
            <configuration>
              <failIfNoTests>true</failIfNoTests>
              <includes>
                <include>**/*Test.java</include>
              </includes>
              <excludes>
                <exclude>**/*ComponentSuite.java</exclude>
              </excludes>
              <reportsDirectory>${project.build.directory}/unit-tests</reportsDirectory>
            </configuration>
          </execution>
          <execution>
            <id>component-tests</id>
            <goals>
              <goal>test</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
              <properties>
                <!--
                                When adding a new property here, suggest keeping src/test/resources/cucumber.properties in sync.
                                These properties values are loaded from that file during the Maven build.
                                -->
                <configurationParameters>cucumber.junit-platform.naming-strategy=${cucumber.junit-platform.naming-strategy}
                                    cucumber.execution.dry-run=${cucumber.execution.dry-run}
                                    cucumber.junit-platform.naming-strategy=${cucumber.junit-platform.naming-strategy}
                                    cucumber.plugin=${cucumber.plugin}
                                    cucumber.publish.enabled=${cucumber.publish.enabled}
                                    cucumber.publish.quiet=${cucumber.publish.quiet}</configurationParameters>
              </properties>
              <includes>
                <include>**/*ComponentSuite.java</include>
              </includes>
              <redirectTestOutputToFile>false</redirectTestOutputToFile>
              <reportsDirectory>${project.build.directory}/component-tests</reportsDirectory>
              <excludes>
                <exclude>**/*Test.java</exclude>
              </excludes>
              <includeJUnit5Engines>
                <engine>junit-platform-suite</engine>
              </includeJUnit5Engines>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- https://maven.apache.org/plugins/maven-source-plugin/ -->
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven.source.plugin.version}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- https://maven.apache.org/plugins/maven-javadoc-plugin/ -->
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven.javadoc.plugin.version}</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- https://maven.apache.org/plugins/maven-checkstyle-plugin/ -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven.checkstyle.plugin.version}</version>
        <configuration>
          <!-- google_checks.xml, sun_checks.xml, or a custom local file -->
          <configLocation>google_checks.xml</configLocation>
          <consoleOutput>true</consoleOutput>
          <failsOnError>true</failsOnError>
          <linkXRef>false</linkXRef>
        </configuration>
        <executions>
          <execution>
            <id>validate</id>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>validate</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- https://maven.apache.org/enforcer/maven-enforcer-plugin/ -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${maven.enforcer.plugin.version}</version>
        <executions>
          <execution>
            <id>enforce</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <dependencyConvergence/>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- https://www.eclemma.org/jacoco/trunk/doc/maven.html -->
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.maven.plugin.version}</version>
        <executions>
          <execution>
            <id>prepare-agent-ut</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${project.build.directory}/jacoco-ut/jacoco-ut.exec</destFile>
            </configuration>
          </execution>
          <execution>
            <id>prepare-agent-component</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <phase>pre-integration-test</phase>
            <configuration>
              <destFile>${project.build.directory}/jacoco-component/jacoco-component.exec</destFile>
            </configuration>
          </execution>
          <execution>
            <id>report-ut</id>
            <goals>
              <goal>report</goal>
            </goals>
            <phase>test</phase>
            <configuration>
              <dataFile>${project.build.directory}/jacoco-ut/jacoco-ut.exec</dataFile>
              <outputDirectory>${project.build.directory}/ut-coverage-reports</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>report-component</id>
            <goals>
              <goal>report</goal>
            </goals>
            <phase>post-integration-test</phase>
            <configuration>
              <dataFile>${project.build.directory}/jacoco-component/jacoco-component.exec</dataFile>
              <outputDirectory>${project.build.directory}/component-coverage-reports</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>jacoco-check-ut</id>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <dataFile>${project.build.directory}/jacoco-ut/jacoco-ut.exec</dataFile>
              <rules>
                <rule>
                  <element>CLASS</element>
                  <limits>
                    <limit>
                      <counter>LINE</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>0.90</minimum>
                    </limit>
                    <limit>
                      <counter>BRANCH</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>0.90</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
          </execution>
          <!-- TODO - Once server execution is added, add a check for code coverage of component testing. -->
        </executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <!-- https://maven.apache.org/plugins/maven-project-info-reports-plugin/ -->
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>${maven.project.info.reports.plugin.version}</version>
        <configuration>
          <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
          <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
        </configuration>
      </plugin>
      <plugin>
        <!-- https://maven.apache.org/plugins/maven-javadoc-plugin/ -->
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven.javadoc.plugin.version}</version>
      </plugin>
    </plugins>
  </reporting>
  <profiles>
    <profile>
      <id>java11+</id>
      <activation>
        <jdk>[11,)</jdk>
      </activation>
      <properties>
        <!--
                Workaround for "javadoc: error - The code being documented uses modules but the packages
                defined in https://docs.oracle.com/javase/8/docs/api/ are in the unnamed module."
                -->
        <maven.javadoc.skip>true</maven.javadoc.skip>
      </properties>
    </profile>
  </profiles>
</project>
